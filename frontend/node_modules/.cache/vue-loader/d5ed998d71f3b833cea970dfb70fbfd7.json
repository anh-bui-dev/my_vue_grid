{"remainingRequest":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/src/components/Search.vue","mtime":1569935041000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Bookings from './Bookings'\nimport Loading from './Loading'\nimport Error from './Error'\nimport { URL } from '../constants/constants'\nimport axios from 'axios'\n\nexport default {\n    name: 'Search',\n    components: {\n        Bookings,\n        Loading,\n        Error\n    },\n    data() {\n        return {\n            keyWord: \"\",\n            sellers: [],\n            error: null\n        }\n    },\n    mounted() {\n        this.getSellers();\n    },\n    methods: {\n        handleChange(e) {\n            e.preventDefault();\n            this.keyWord = e.target.value;\n            if(this.keyWord.length >=3 ) {\n                this.getSellers();\n            }\n        },\n\n        handleEnter(e) {\n            e.preventDefault();\n            this.getSellers();\n        },\n\n        getSellers() {\n            // Show loading\n            this.$refs.loading.handleLoading();\n            Promise.all([\n                axios.get(URL + \"/sellers\"),\n                axios.get(URL + \"/products\")\n            ])\n            .then(([resp, resp1]) => {\n                const sellers = resp.data.map(seller => {\n                    var products = resp1.data.filter(x => (x.sellerId == seller.id) && (x.name.toUpperCase().includes(this.keyWord.toUpperCase())));\n                    return {...seller, products: products};\n                })\n                this.sellers = sellers.sort((a, b) => a.name.localeCompare(b.name));\n                // Hide loading\n                this.$refs.loading.handleLoading();\n            })\n            .catch((err) => {\n                // Handle the error\n                this.error = err;\n                // Hide loading\n                this.$refs.loading.handleLoading();\n            });\n        }\n    }\n}\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"search\">\n            <input @keyup.enter=\"handleEnter\" class=\"form-control\" @change=\"handleChange\" type=\"text\" placeHolder=\"Search for booking by product name\" />\n            <br/>\n            <div class=\"content\" v-for=\"(seller, index) in sellers\" :key=\"`${keyWord}-${index}`\">\n                <p>{{ seller.name }}</p>\n                <Bookings :seller=\"seller\" />\n            </div>\n            <Loading ref=\"loading\" />\n            <Error v-if=\"error && error.message\" :message=\"error.message\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport Bookings from './Bookings'\nimport Loading from './Loading'\nimport Error from './Error'\nimport { URL } from '../constants/constants'\nimport axios from 'axios'\n\nexport default {\n    name: 'Search',\n    components: {\n        Bookings,\n        Loading,\n        Error\n    },\n    data() {\n        return {\n            keyWord: \"\",\n            sellers: [],\n            error: null\n        }\n    },\n    mounted() {\n        this.getSellers();\n    },\n    methods: {\n        handleChange(e) {\n            e.preventDefault();\n            this.keyWord = e.target.value;\n            if(this.keyWord.length >=3 ) {\n                this.getSellers();\n            }\n        },\n\n        handleEnter(e) {\n            e.preventDefault();\n            this.getSellers();\n        },\n\n        getSellers() {\n            // Show loading\n            this.$refs.loading.handleLoading();\n            Promise.all([\n                axios.get(URL + \"/sellers\"),\n                axios.get(URL + \"/products\")\n            ])\n            .then(([resp, resp1]) => {\n                const sellers = resp.data.map(seller => {\n                    var products = resp1.data.filter(x => (x.sellerId == seller.id) && (x.name.toUpperCase().includes(this.keyWord.toUpperCase())));\n                    return {...seller, products: products};\n                })\n                this.sellers = sellers.sort((a, b) => a.name.localeCompare(b.name));\n                // Hide loading\n                this.$refs.loading.handleLoading();\n            })\n            .catch((err) => {\n                // Handle the error\n                this.error = err;\n                // Hide loading\n                this.$refs.loading.handleLoading();\n            });\n        }\n    }\n}\n</script>"]}]}