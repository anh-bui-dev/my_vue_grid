{"remainingRequest":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/src/components/Search.vue","mtime":1569130793000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_grid/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Bookings from './Bookings'\nimport Popup from './Popup'\nimport Loading from './Loading'\nimport { URL } from '../constants/constants'\nimport axios from 'axios'\n\nexport default {\n    name: 'Search',\n    components: {\n        Bookings,\n        Popup,\n        Loading\n    },\n    data() {\n        return {\n            keyWord: \"\",\n            sellers: []\n        }\n    },\n    mounted() {\n        // Show loading\n        this.$refs.loading.handleLoading();\n        Promise.all([\n            axios.get(URL + \"/sellers\"),\n            axios.get(URL + \"/products\")\n        ])\n        .then(([resp, resp1, resp2]) => {\n            const sellers = resp.data.map(seller => {\n                const products = resp1.data.filter(x => x.sellerId == seller.id);\n                return {...seller, products: products};\n            })\n            this.sellers = sellers;\n            // Hide loading\n            this.$refs.loading.handleLoading();\n        })\n    },\n    methods: {\n        handlePopup() {\n            this.$refs.popup.handlePopup();\n        },\n\n        handleChange(e) {\n            e.preventDefault();\n            if(e.target.value.length >= 3) {\n                this.keyWord = e.target.value;\n                // Show loading\n                this.$refs.loading.handleLoading();\n                var self = this;\n                Promise.all([\n                    axios.get(URL + \"/sellers\"),\n                    axios.get(URL + \"/products\")\n                ])\n                .then(([resp, resp1]) => {\n                    const sellers = resp.data.map(seller => {\n                        var products = resp1.data.filter(x => (x.sellerId == seller.id) && (x.name.toUpperCase().includes(this.keyWord.toUpperCase())));\n                        return {...seller, products: products};\n                    })\n                    this.sellers = sellers;\n                    // Hide loading\n                    this.$refs.loading.handleLoading();\n                })\n            }\n        }\n    }\n}\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"search\">\n            <input id=\"keyWord\" v-model=\"keyWord\" class=\"form-control\" @change=\"handleChange\" type=\"text\" placeHolder=\"Search for booking by product name\" />\n            <br/>\n            <div class=\"content\" v-for=\"seller in sellers\">\n                <p>{{ seller.name }}</p>\n                <Bookings :seller=\"seller\" :key=\"keyWord\" :handlePopup=\"handlePopup\" />\n            </div>\n            <Popup ref=\"popup\" />\n            <Loading ref=\"loading\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport Bookings from './Bookings'\nimport Popup from './Popup'\nimport Loading from './Loading'\nimport { URL } from '../constants/constants'\nimport axios from 'axios'\n\nexport default {\n    name: 'Search',\n    components: {\n        Bookings,\n        Popup,\n        Loading\n    },\n    data() {\n        return {\n            keyWord: \"\",\n            sellers: []\n        }\n    },\n    mounted() {\n        // Show loading\n        this.$refs.loading.handleLoading();\n        Promise.all([\n            axios.get(URL + \"/sellers\"),\n            axios.get(URL + \"/products\")\n        ])\n        .then(([resp, resp1, resp2]) => {\n            const sellers = resp.data.map(seller => {\n                const products = resp1.data.filter(x => x.sellerId == seller.id);\n                return {...seller, products: products};\n            })\n            this.sellers = sellers;\n            // Hide loading\n            this.$refs.loading.handleLoading();\n        })\n    },\n    methods: {\n        handlePopup() {\n            this.$refs.popup.handlePopup();\n        },\n\n        handleChange(e) {\n            e.preventDefault();\n            if(e.target.value.length >= 3) {\n                this.keyWord = e.target.value;\n                // Show loading\n                this.$refs.loading.handleLoading();\n                var self = this;\n                Promise.all([\n                    axios.get(URL + \"/sellers\"),\n                    axios.get(URL + \"/products\")\n                ])\n                .then(([resp, resp1]) => {\n                    const sellers = resp.data.map(seller => {\n                        var products = resp1.data.filter(x => (x.sellerId == seller.id) && (x.name.toUpperCase().includes(this.keyWord.toUpperCase())));\n                        return {...seller, products: products};\n                    })\n                    this.sellers = sellers;\n                    // Hide loading\n                    this.$refs.loading.handleLoading();\n                })\n            }\n        }\n    }\n}\n</script>"]}]}